{"version":3,"file":"static/js/6008.f9f01c31.chunk.js","mappings":"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","sources":["nft/types/airdrop/index.ts","components/AirdropModal/index.tsx","nft/queries/genie/GetAirdorpMerkle.ts"],"sourcesContent":["export enum Airdrop {\n  LOOKS_RARE_NFT_COMMERCE_REWARDS = 'LOOKS_RARE_NFT_COMMERCE_REWARDS',\n  GENIE_UNISWAP_USDC_AIRDROP = 'GENIE_UNISWAP_USDC_AIRDROP',\n}\n\nexport interface Rewards {\n  amount: string\n  walletAddress: string\n  tokenAddress: string\n  merkleProof: Array<string>\n  rewardType: Airdrop\n  chainId: number\n  index: number\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport uniswapNftAirdropClaim from 'abis/uniswap-nft-airdrop-claim.json'\nimport airdropBackgroundv2 from 'assets/images/airdopBackground.png'\nimport { ButtonEmphasis, ButtonSize, ThemeButton } from 'components/Button'\nimport { OpacityHoverState } from 'components/Common'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { useContract } from 'hooks/useContract'\nimport { ChevronRightIcon } from 'nft/components/icons'\nimport { useIsNftClaimAvailable } from 'nft/hooks/useIsNftClaimAvailable'\nimport { CollectionRewardsFetcher } from 'nft/queries/genie/GetAirdorpMerkle'\nimport { Airdrop, Rewards } from 'nft/types/airdrop'\nimport { useEffect, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled from 'styled-components/macro'\nimport { CloseIcon, ThemedText } from 'theme'\n\nimport Modal from '../Modal'\n\nconst ModalWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Body = styled.div`\n  padding: 28px 20px 20px 20px;\n`\n\nconst ClaimButton = styled(ThemeButton)`\n  width: 100%;\n  background-color: ${({ theme }) => theme.accentAction};\n  border-radius: 12px;\n  color: ${({ theme }) => theme.white};\n`\n\nconst Line = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.white};\n  opacity: 0.24;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`\n\nconst LinkWrap = styled.a`\n  text-decoration: none;\n  ${OpacityHoverState}\n`\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst StyledImage = styled.img`\n  width: 100%;\n  height: 170px;\n`\n\nconst USDCLabel = styled.div`\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 44px;\n  margin-top: 8px;\n  color: white;\n`\n\nconst TextContainer = styled.div`\n  position: absolute;\n  left: 16px;\n  top: 16px;\n  right: 16px;\n`\n\nconst RewardsDetailsContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`\n\nconst CurrencyText = styled.span`\n  color: white;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14.5px;\n`\n\nconst ClaimContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  height: 380px;\n  padding: 60px 28px;\n  padding-bottom: 20px;\n`\n\nconst SuccessText = styled.div`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 24px;\n  margin-bottom: 8px;\n`\n\nconst EtherscanLink = styled.a`\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`\n\nconst CloseButton = styled(ThemeButton)`\n  max-width: 68px;\n  margin-top: auto;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst SyledCloseIcon = styled(CloseIcon)`\n  float: right;\n  height: 24px;\n\n  ${OpacityHoverState}\n`\n\nconst Error = styled.div`\n  display: flex;\n  color: ${({ theme }) => theme.accentCritical};\n  font-weight: 500;\n  line-height: 24px;\n  border-radius: 16px;\n  padding: 12px 20px;\n  font-size: 14px;\n  align-items: center;\n  gap: 12px;\n`\n\nconst ReactLinkWrap = styled.div`\n  margin-bottom: 40px;\n`\n\nconst RewardsText = styled.span`\n  font-size: 12px;\n  line-height: 16px;\n  color: ${({ theme }) => theme.white};\n\n  &:first-child {\n    margin-bottom: 8px;\n  }\n`\n\nconst RewardsInformationText = styled.span`\n  display: inline-block;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  margin-bottom: 28px;\n`\n\nconst MainHeader = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  color: ${({ theme }) => theme.white};\n`\n\nconst EtherscanLinkWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`\n\nenum RewardAmounts {\n  tradingRewardAmount = 300,\n  holderRewardAmount = 1000,\n  combinedAmount = 1300,\n}\n\nconst AirdropModal = () => {\n  const { account, provider } = useWeb3React()\n  const [claim, setClaim] = useState<Rewards>()\n  const [isClaimed, setIsClaimed] = useState(false)\n  const [hash, setHash] = useState('')\n  const [error, setError] = useState(false)\n  const setIsClaimAvailable = useIsNftClaimAvailable((state) => state.setIsClaimAvailable)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [totalAmount, setTotalAmount] = useState(0)\n  const isOpen = useModalIsOpen(ApplicationModal.UNISWAP_NFT_AIRDROP_CLAIM)\n  const usdcAirdropToggle = useToggleModal(ApplicationModal.UNISWAP_NFT_AIRDROP_CLAIM)\n  const contract = useContract(UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS, uniswapNftAirdropClaim)\n\n  const displayError = () => {\n    setIsSubmitting(false)\n    setError(true)\n    setTimeout(() => {\n      setError(false)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    if (account && provider && contract) {\n      ;(async () => {\n        try {\n          const { data } = await CollectionRewardsFetcher(account)\n          const claim = data.find((claim) => claim?.rewardType === Airdrop.GENIE_UNISWAP_USDC_AIRDROP)\n\n          if (!claim) return\n\n          const [isClaimed] = await contract.connect(provider).functions.isClaimed(claim?.index)\n\n          if (claim && isClaimed === false) {\n            const usdAmount = BigNumber.from(claim.amount).div(10 ** 6)\n            setClaim(claim)\n            setTotalAmount(usdAmount.toNumber())\n            setIsClaimAvailable(true)\n          }\n        } catch (err) {\n          displayError()\n        }\n      })()\n    }\n  }, [account, contract, provider, setIsClaimAvailable])\n\n  const makeClaim = async () => {\n    try {\n      if (contract && claim && claim.amount && claim.merkleProof && provider) {\n        setIsSubmitting(true)\n\n        const response: TransactionResponse = await contract\n          .connect(provider?.getSigner())\n          .functions.claim(claim.index, account, claim?.amount, claim?.merkleProof)\n\n        await response.wait()\n\n        setHash(response.hash)\n        setIsSubmitting(false)\n        setIsClaimed(true)\n        setIsClaimAvailable(false)\n      }\n    } catch (err) {\n      setIsSubmitting(false)\n      displayError()\n    }\n  }\n\n  return (\n    <>\n      <Modal hideBorder isOpen={isOpen} onDismiss={usdcAirdropToggle} maxHeight={90} maxWidth={400}>\n        <ModalWrap>\n          {isClaimed ? (\n            <ClaimContainer>\n              <ThemedText.HeadlineSmall>Congratulations!</ThemedText.HeadlineSmall>\n              <SuccessText>\n                You have successfully claimed {totalAmount} USDC. Thank you for supporting Genie.xyz.\n              </SuccessText>\n              <EtherscanLink href={`https://etherscan.io/tx/${hash}`} target=\"_blank\">\n                <ThemedText.Link>\n                  <EtherscanLinkWrap>\n                    <span>Etherscan</span>\n                    <ChevronRightIcon />\n                  </EtherscanLinkWrap>\n                </ThemedText.Link>\n              </EtherscanLink>\n\n              <CloseButton size={ButtonSize.medium} emphasis={ButtonEmphasis.medium} onClick={usdcAirdropToggle}>\n                Close\n              </CloseButton>\n            </ClaimContainer>\n          ) : (\n            <>\n              <ImageContainer>\n                <TextContainer>\n                  <SyledCloseIcon onClick={usdcAirdropToggle} stroke=\"white\" />\n                  <MainHeader>Uniswap NFT Airdrop</MainHeader>\n                  <USDCLabel>{totalAmount} USDC</USDCLabel>\n                  <Line />\n                  <RewardsDetailsContainer>\n                    <RewardsText>Trading rewards</RewardsText>{' '}\n                    <CurrencyText>\n                      {totalAmount === RewardAmounts.tradingRewardAmount || totalAmount === RewardAmounts.combinedAmount\n                        ? `${RewardAmounts.tradingRewardAmount} USDC`\n                        : '0'}\n                    </CurrencyText>\n                  </RewardsDetailsContainer>\n                  <RewardsDetailsContainer>\n                    <RewardsText>Genie NFT holder rewards</RewardsText>{' '}\n                    <CurrencyText>\n                      {totalAmount !== RewardAmounts.tradingRewardAmount\n                        ? `${RewardAmounts.holderRewardAmount} USDC`\n                        : '0'}\n                    </CurrencyText>\n                  </RewardsDetailsContainer>\n                </TextContainer>\n                <StyledImage src={airdropBackgroundv2} />\n              </ImageContainer>\n              <Body>\n                <RewardsInformationText>\n                  As a long time supporter of Genie, you’ve been awarded {totalAmount} USDC tokens.\n                </RewardsInformationText>\n                <ReactLinkWrap>\n                  <LinkWrap href=\"https://uniswap.org/blog/uniswap-nft-aggregator-announcement\" target=\"_blank\">\n                    <ThemedText.Link>Read more about Uniswap NFT.</ThemedText.Link>\n                  </LinkWrap>\n                </ReactLinkWrap>\n\n                {error && (\n                  <Error>\n                    <AlertTriangle />\n                    Claim USDC failed. Please try again later\n                  </Error>\n                )}\n\n                <ClaimButton\n                  onClick={makeClaim}\n                  size={ButtonSize.medium}\n                  emphasis={ButtonEmphasis.medium}\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting && <Loader stroke=\"white\" />}\n                  <span>Claim{isSubmitting && 'ing'} USDC</span>\n                </ClaimButton>\n              </Body>\n            </>\n          )}\n        </ModalWrap>\n      </Modal>\n    </>\n  )\n}\n\nexport default AirdropModal\n","import { Rewards } from 'nft/types/airdrop'\n\ninterface CollectionrRewardsResponse {\n  data: Array<Rewards>\n}\n\nexport const CollectionRewardsFetcher = async (address: string): Promise<CollectionrRewardsResponse> => {\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/rewards/${address}?category=GENIE_UNISWAP_USDC_AIRDROP`\n\n  const controller = new AbortController()\n\n  const timeoutId = setTimeout(() => controller.abort(), 3000)\n\n  const r = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  clearInterval(timeoutId)\n  const data = await r.json()\n\n  return data\n}\n"],"names":["Airdrop","ModalWrap","styled","componentId","Body","ClaimButton","ThemeButton","withConfig","_ref","theme","accentAction","_ref2","white","Line","_ref3","LinkWrap","OpacityHoverState","ImageContainer","StyledImage","USDCLabel","TextContainer","RewardsDetailsContainer","CurrencyText","ClaimContainer","SuccessText","EtherscanLink","CloseButton","SyledCloseIcon","CloseIcon","Error","_ref4","accentCritical","ReactLinkWrap","RewardsText","_ref5","RewardsInformationText","_ref6","textPrimary","MainHeader","_ref7","EtherscanLinkWrap","RewardAmounts","AirdropModal","account","provider","useWeb3React","claim","setClaim","useState","isClaimed","setIsClaimed","hash","setHash","error","setError","setIsClaimAvailable","useIsNftClaimAvailable","state","isSubmitting","setIsSubmitting","totalAmount","setTotalAmount","isOpen","useModalIsOpen","ApplicationModal","usdcAirdropToggle","useToggleModal","contract","useContract","UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS","uniswapNftAirdropClaim","displayError","setTimeout","useEffect","data","async","url","concat","process","address","controller","AbortController","timeoutId","abort","r","fetch","method","headers","clearInterval","json","CollectionRewardsFetcher","find","rewardType","GENIE_UNISWAP_USDC_AIRDROP","connect","functions","index","usdAmount","BigNumber","amount","div","toNumber","err","_jsx","_Fragment","children","Modal","hideBorder","onDismiss","maxHeight","maxWidth","_jsxs","ThemedText","href","target","ChevronRightIcon","size","ButtonSize","emphasis","ButtonEmphasis","onClick","stroke","tradingRewardAmount","combinedAmount","holderRewardAmount","src","airdropBackgroundv2","AlertTriangle","merkleProof","response","getSigner","wait","disabled","Loader"],"sourceRoot":""}